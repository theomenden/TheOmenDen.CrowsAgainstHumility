// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheOmenDen.CrowsAgainstHumility.Data.Contexts;

#nullable disable

namespace TheOmenDen.CrowsAgainstHumility.Data.Migrations
{
    [DbContext(typeof(CrowsAgainstHumilityContext))]
    [Migration("20230322011506_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.BlackCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PickAnswersCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id")
                        .HasName("PK_BlackCards_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex(new[] { "PackId" }, "IX_BlackCards_PackId");

                    b.ToTable("BlackCards", (string)null);
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.FilteredWhiteCardsByPack", b =>
                {
                    b.Property<string>("CardText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable((string)null);

                    b.ToView("vw_FilteredWhiteCardsByPack", (string)null);
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.Pack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsOfficialPack")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IsOfficialPack" }, "IX_Packs_IsOfficialPack");

                    b.HasIndex(new[] { "Name" }, "IX_Packs_Name");

                    b.ToTable("Packs", (string)null);
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.WhiteCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("CardText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_WhiteCards_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex(new[] { "PackId" }, "IX_WhiteCards_PackId");

                    b.ToTable("WhiteCards", (string)null);
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Data.Models.fn_MultiFilterWordsForCardsResult", b =>
                {
                    b.Property<string>("CardText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("fn_MultiFilterWordsForCardsResult");
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.BlackCard", b =>
                {
                    b.HasOne("TheOmenDen.CrowsAgainstHumility.Core.Models.Pack", "Pack")
                        .WithMany("BlackCards")
                        .HasForeignKey("PackId")
                        .IsRequired()
                        .HasConstraintName("FK_BlackCards_Packs");

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.WhiteCard", b =>
                {
                    b.HasOne("TheOmenDen.CrowsAgainstHumility.Core.Models.Pack", "Pack")
                        .WithMany("WhiteCards")
                        .HasForeignKey("PackId")
                        .IsRequired()
                        .HasConstraintName("FK_WhiteCards_Packs");

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("TheOmenDen.CrowsAgainstHumility.Core.Models.Pack", b =>
                {
                    b.Navigation("BlackCards");

                    b.Navigation("WhiteCards");
                });
#pragma warning restore 612, 618
        }
    }
}
