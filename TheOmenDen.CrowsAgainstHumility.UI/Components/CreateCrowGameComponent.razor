<ModalHeader Background="Background.Dark" TextColor="TextColor.Light">
    <ModalTitle>Create your Game</ModalTitle>
    <CloseButton Class="btn-close-white" Shadow="Shadow.Small" />
</ModalHeader>
<ModalBody Background="Background.Dark">
<Row Height="Height.Is100">
<Column>
<Tabs RenderMode="TabsRenderMode.LazyLoad"
      Margin="Margin.Is2.FromTop.Is3.FromBottom"
      Justified>
<Items>
    <Tab Name="lobbyInfoTab">Base Game Information</Tab>
    <Tab Name="deckBuildingTab">Expansion Pack Selection</Tab>
    <Tab Name="addPlayersTab">Players</Tab>
    <Tab Name="gameRuleSelectionTab">Game Rules</Tab>
    <Tab Name="finalizeAndReviewTab">Finalize</Tab>
</Items>
<Content>
<TabPanel Name="lobbyInfoTab" Height="Height.Is100">
    <Fields ColumnSize="ColumnSize.IsHalf.OnDesktop.IsFull.OnMobile">
        <Field Horizontal>
            <FieldLabel TextColor="TextColor.Light">
                Lobby Name
            </FieldLabel>
            <FieldBody>
                <Addons>
                    <Addon AddonType="AddonType.Start">
                        <AddonLabel>
                            <Icon Name="IconName.UserFriends" />
                        </AddonLabel>
                    </Addon>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit @bind-Text="_gameInputModel.RoomName" />
                    </Addon>
                </Addons>
            </FieldBody>
        </Field>
        <Field Horizontal>
            <FieldLabel TextColor="TextColor.Light">
                Generated Code
            </FieldLabel>
            <FieldBody>
                <Addons>
                    <Addon AddonType="AddonType.Start">
                        <AddonLabel>
                            <Icon Name="IconName.Key" />
                        </AddonLabel>
                    </Addon>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Disabled ReadOnly Text="@_gameInputModel.GameCode" />
                    </Addon>
                </Addons>
            </FieldBody>
        </Field>
    </Fields>
</TabPanel>
<TabPanel Name="deckBuildingTab" Height="Height.Is100">
    <Row>
        <Column ColumnSize="ColumnSize.IsAuto">
            <Autocomplete TItem="Pack"
                          TValue="Guid"
                          Data="_packs"
                          TextField="item => item.Name"
                          ValueField="item => item.Id"
                          Placeholder="Search..."
                          Filter="AutocompleteFilter.StartsWith"
                          FreeTyping
                          SelectionMode="AutocompleteSelectionMode.Multiple"
                          CloseOnSelection="false"
                          HighlightSearch
                          CustomFilter="@((item, searchValue) => item.Name.IndexOf(searchValue, 0, StringComparison.CurrentCultureIgnoreCase) >= 0)"
                          @bind-SelectedValues="_selectedPackIds"
                          @bind-SelectedTexts="_selectedPackNames"
                          Virtualize>
                <NotFoundContent>Sorry... @context pack could not be found :( </NotFoundContent>
                <ItemContent>
                    <Div Flex="Flex.JustifyContent.Between.AlignItems.Center"
                         Height="Height.Is100">
                        <Heading Margin="Margin.Is2.FromBottom"
                                 Size="HeadingSize.Is5" TextOverflow="TextOverflow.Wrap">@context.Item.Name</Heading>
                        @if (context.Item.IsOfficialPack)
                        {
                            <Badge Color="Color.Primary" Pill>
                                <Icon Name="IconName.CheckCircle" />
                                <Span Class="visually-hidden">
                                    Official Cards Against Humanity Pack
                                </Span>
                            </Badge>
                        }
                    </Div>
                </ItemContent>
            </Autocomplete>
        </Column>
        <Column ColumnSize="ColumnSize.IsAuto">
            <Div Width="Width.Is100"
                 ElementId="#b-animate">
                @if (_selectedPackNames?.Any() == true)
                {
                    <CardGroup Flex="Flex.Row.AlignItems.Start.JustifyContent.Center">
                        <Repeater TItem="string" Items="_selectedPackNames">
                            <Animate Anchor="#b-animate"
                                     Auto
                                     Animation="Animations.SlideUp"
                                     DelayMilliseconds="500">
                                <Card Shadow="Shadow.Default"
                                      Margin="Margin.Is3.OnY.Is2.OnX"
                                      TextColor="TextColor.Dark">
                                    <CardBody>
                                        @context
                                        @if (IsOfficialPack(context))
                                        {
                                            <Icon Name="@("fa-badge-check")" TextColor="TextColor.Primary" />
                                        }
                                    </CardBody>
                                </Card>
                            </Animate>
                        </Repeater>
                    </CardGroup>
                }
            </Div>
        </Column>
    </Row>
    <Row>
        <Column>
            <Buttons Role="ButtonsRole.Toolbar"
                     Flex="Flex.Column.JustifyContent.End.AlignItems.Start"
                     Margin="Margin.Is2.FromTop.Is3.FromBottom">
                <Button Color="Color.Warning"
                        Clicked="AddRandomPackAsync"
                        Margin="Margin.Is2.OnY"
                        Class="border-dark-bottom-1 rounded-bottom-3 shadow-sm">
                    Add a random pack <Icon Name="IconName.Add" />
                </Button>
                <Button Color="Color.Warning"
                        Clicked="Add5RandomPacksAsync"
                        Margin="Margin.Is2.FromTop.Is1.FromBottom"
                        Class="border-dark-bottom-1 rounded-bottom-3 shadow-sm">
                    Add 5 Random Packs <Icon Name="IconName.Dice" />
                </Button>
                <Button Color="Color.Info"
                        Clicked="AddAllOfficialPacksAsync"
                        Margin="Margin.Is2.FromTop.Is1.FromBottom"
                        Class="border-dark-bottom-1 rounded-bottom-3 shadow-sm">
                    Add All Official Packs <Icon Name="IconName.BalanceScale" />
                </Button>
                <Button Color="Color.Danger"
                        Clicked="ClearPacksAsync"
                        Margin="Margin.Is2.FromTop.Is1.FromBottom"
                        Class="border-dark-bottom-1 rounded-bottom-3 shadow-sm">
                    Remove All Packs <Icon Name="IconName.Clear" />
                </Button>
            </Buttons>
        </Column>
        <Column ColumnSize="ColumnSize.IsAuto">
            <Paragraph Margin="Margin.Is2.OnY"
                       TextColor="TextColor.Light">
                Estimated White Cards: @GetEstimatedWhiteCardCount()
            </Paragraph>
            <Paragraph Margin="Margin.Is2.OnY"
                       TextColor="TextColor.Light">
                Estimated Black Cards: @GetEstimatedBlackCardCount()
            </Paragraph>
        </Column>
    </Row>
</TabPanel>
<TabPanel Name="addPlayersTab" Height="Height.Is100">
    <Row>
        <Column ColumnSize="ColumnSize.IsThird.OnTablet.IsQuarter.OnDesktop.Is2.OnWidescreen">
            <Field>
                <FieldLabel TextColor="TextColor.Warning">
                    Players to Include
                </FieldLabel>
                <FieldBody>
                    <TextEdit Placeholder="Twitch User Name..." @bind-Text="@_playerToAdd" />
                    <Button Color="Color.Primary"
                            Border="Border.Is0.OnAll.Rounded"
                            Margin="Margin.Is2.FromTop.OnDesktop.Is4.FromTop.OnMobile"
                            Clicked="AddPlayerToListAsync">
                        Add To List
                    </Button>
                </FieldBody>
            </Field>
        </Column>
        <Column ColumnSize="ColumnSize.Is8.OnTablet.Is9.OnDesktop.Is10.OnWidescreen" Height="Height.Is100">
            @if (!_players.Any())
            {
                <Paragraph TextColor="TextColor.Light"
                           TextWeight="TextWeight.Light">
                    Add players to your game by their Twitch or Discord Handle
                </Paragraph>
                <Small TextColor="TextColor.Light"
                       Class="fst-italic">
                    (If adding by discord, please include the numbers in their handle after the # - a.k.a. Discriminator Value)
                </Small>
            }
            else
            {
                <Div ElementId="#list-group-animate-div">
                    <CardGroup>
                        <Repeater TItem="User" Items="_players">
                            <Animate Anchor="#list-group-animate-div"
                                     Animation="Animations.FadeUp"
                                     Auto
                                     DelayMilliseconds="500">
                                <Card Background="Background.Transparent"
                                      Margin="Margin.Is2.OnX.Is3.OnY"
                                      TextColor="TextColor.Light"
                                      Shadow="Shadow.Default"
                                      Border="Border.Is0.Rounded">
                                    <CardBody Background="Background.Transparent"
                                              TextColor="TextColor.Light">
                                        <Div Flex="Flex.Column">
                                            <Text Display="Display.InlineFlex"
                                                  Margin="Margin.Is2.FromBottom.OnDesktop.Is4.FromBottom.OnMobile">
                                                <Image Text="@context.DisplayName"
                                                       Source="@context.ProfileImageUrl"
                                                       loading="lazy"
                                                       Border="Border.Is2.Light.OnAll.Rounded"
                                                       Margin="Margin.Is2.FromEnd.OnDesktop.Is4.FromEnd.OnMobile"
                                                       Style="height: 48px; max-height: fit-content; width: 48px; max-width: fit-content;" />

                                                @context.DisplayName
                                                <Icon Name="DeterminePlayerIconName(context?.BroadcasterType ?? String.Empty)"
                                                      Style="@DeterminePlayerIconColor(context.BroadcasterType ?? String.Empty)"
                                                      TextWeight="TextWeight.Bold"
                                                      IconSize="IconSize.Large" />
                                            </Text>
                                        </Div>
                                    </CardBody>
                                </Card>
                            </Animate>
                        </Repeater>
                    </CardGroup>
                </Div>
            }
        </Column>
    </Row>
</TabPanel>
<TabPanel Name="gameRuleSelectionTab" Height="Height.Is100">
    <Row>
        <Fields ColumnSize="ColumnSize.IsFull">
            <Field Horizontal>
                <FieldLabel TextColor="TextColor.Light">
                    Round Time (in minutes)
                </FieldLabel>
                <FieldBody>
                    <Addons>
                        <Addon AddonType="AddonType.Body">
                            <NumericPicker @bind-Value="@_roundtimeInMinutes" ModifyValueOnWheel WheelOn="NumericWheelOn.Hover"/>
                        </Addon>
                        <Addon AddonType="AddonType.End">
                            <AddonLabel>
                                <Icon Name="IconName.Clock"/>
                            </AddonLabel>
                        </Addon>
                    </Addons>
                </FieldBody>
            </Field>
            <Field Horizontal>
                <FieldLabel TextColor="TextColor.Light">
                    Awesome Points to Win:
                </FieldLabel>
                <FieldBody>
                    <Addons>
                        <Addon AddonType="AddonType.Body">
                            <NumericPicker @bind-Value="@_awesomePointsToWin" ModifyValueOnWheel WheelOn="NumericWheelOn.Hover"/>
                        </Addon>
                        <Addon AddonType="AddonType.End">
                            <AddonLabel>
                                <Icon Name="IconName.Wrench"/>
                            </AddonLabel>
                        </Addon>
                    </Addons>
                </FieldBody>
            </Field>
        </Fields>
    </Row>
    <Row>
        <Fields ColumnSize="ColumnSize.IsQuarter.OnDesktop.Is8.OnMobile">
            <Field Horizontal>
                <FieldLabel TextColor="TextColor.Light">
                    Rule Set
                </FieldLabel>
                <FieldBody>
                    <Select TValue="int" @bind-SelectedValue="@_chosenGameRule">
                        <Repeater TItem="@GameRules" 
                                  Items="@GameRules.ReadOnlyEnumerationList.OrderBy(gr => gr.Value)">
                            <SelectItem TValue="int" Value="@context.Value">
                                @context.ToString()
                            </SelectItem>
                        </Repeater>
                    </Select>
                </FieldBody>
            </Field>
            </Fields>
        </Row>
</TabPanel>
<TabPanel Name="finalizeAndReviewTab" Height="Height.Is100">
    <Heading Size="HeadingSize.Is2" TextColor="TextColor.Light">
        Create Your Game?
    </Heading>
    <Card Background="Background.Transparent">
        <CardBody TextColor="TextColor.Light">
            <CardTitle Size="3">
                @_gameInputModel.RoomName
            </CardTitle>
            <CardSubtitle>
                @_gameInputModel.GameCode
            </CardSubtitle>
            <CardText TextColor="TextColor.Light">
                <Heading Size="HeadingSize.Is5">
                    With the following conditions:
                </Heading>
                <Paragraph>
                    <Icon Name="IconName.Clock"/> @_gameInputModel.RoundTimeLimit minute rounds.
                </Paragraph>
                <Paragraph>
                    <Icon Name="IconName.Gamepad"/> @GetChosenGameRule().ToString() as the play type.
                </Paragraph>
                <Paragraph>
                    <Icon Name="IconName.PlusCircle"/> @_awesomePointsToWin points needed to win.
                </Paragraph>
            </CardText>
        </CardBody>
    </Card>
</TabPanel>
</Content>
</Tabs>
</Column>
</Row>
</ModalBody>
<ModalFooter Background="Background.Dark">
    <Buttons Role="ButtonsRole.Toolbar"
             Flex="Flex.AlignItems.Center.JustifyContent.Between">
        <Button Color="Color.Primary"
                Margin="Margin.Is2.OnX"
                Border="Border.Is0.OnTop.Is2.OnBottom.Is1.OnStart.Is1.OnEnd.Dark.OnStart.Dark.OnEnd.Dark.OnBottom.Rounded"
                Shadow="Shadow.Small">
            Create Game <Icon Name="IconName.Gamepad"/>
        </Button>
        <Button Color="Color.Secondary"
                Margin="Margin.Is2.OnX"
                Clicked="OnCancelClickedAsync"
                Border="Border.Is0.OnTop.Is2.OnBottom.Is1.OnStart.Is1.OnEnd.Dark.OnStart.Dark.OnEnd.Dark.OnBottom.Rounded"
                Shadow="Shadow.Small">
            Cancel
        </Button>
    </Buttons>
</ModalFooter>