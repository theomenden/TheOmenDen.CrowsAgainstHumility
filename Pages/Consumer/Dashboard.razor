@page "/user/manage"
@using Microsoft.AspNetCore.Authentication
@using TheOmenDen.CrowsAgainstHumility.Core.Auth.ViewModels
<SEO Canonical="/user/manage" Title="User Account Dashboard" Description="Your user account dashboard" />
<Container Fluid
           Background="Background.Dark"
           TextColor="TextColor.Light"
           Margin="Margin.Is3.FromTop"
           Border="Border.Is2.Secondary.OnAll.Rounded">
    <Row Height="Height.Is100">
        <Column ColumnSize="ColumnSize.IsFull.OnWidescreen">
            <Heading Size="HeadingSize.Is4"
                     TextWeight="TextWeight.Light">
                Viewing Your Profile
            </Heading>
        </Column>
        <Column Margin="Margin.Is2.FromTop"
                ColumnSize="ColumnSize.IsFull.IsThird.OnWidescreen.IsThird.OnFullHD">
            <Div Display="Display.Flex" Margin="Margin.Is4.FromBottom"
                 Padding="Padding.Is2.FromStart.Is3.FromBottom">
                <Image Source="@_userProfileImageUrl" 
                       Text="@_user?.UserName" 
                       Fluid
                       Shadow="Shadow.Large"
                       Border="Border.Is1.Light.OnAll.Rounded"
                       Style="max-width: 200px;" />
                </Div>
                <Button Clicked="ShowProfileImageEditorAsync"
                    Color="Color.Info"
                    Size="Size.Small"
                    Border="Border.Is2.Light.OnAll.Rounded">
                <Icon Name="IconName.Edit">Edit</Icon>
                </Button>
                </Column>
                <Column ColumnSize="ColumnSize.IsFull.Is8.OnWidescreen.Is8.OnFullHD">
                <Field>
                <FieldLabel>Usernames</FieldLabel>
                <Repeater TItem="LoginViewModel" Items="_userNames">
                    <Field Horizontal
                           Flex="Flex.AlignItems.Center.JustifyContent.Start"
                           VerticalAlignment="VerticalAlignment.Middle">
                        <FieldLabel TextColor="TextColor.Light" ColumnSize="ColumnSize.IsAuto">
                            <i class="@GetLoginProviderIcon(@context.LoginProvider)"></i>
                        </FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.IsQuarter">
                            <Text TextColor="TextColor.Light" TextTransform="TextTransform.Capitalize">
                                <Blazorise.Link To="@($"https://twitch.tv/{context.LoginUsername}")"
                                                Target="Target.Blank">
                                    @context.LoginUsername
                                    <Icon Name="IconName.ExternalLinkSquareAlt" IconSize="IconSize.ExtraSmall" />
                                </Blazorise.Link>
                            </Text>
                            </FieldBody>
                            </Field>
                            </Repeater>
                            </Field>
                            <Fields>
                            <Field>
                            <FieldLabel>
                            Email
                            </FieldLabel>
                            <TextEdit Text="@_user?.Email" ReadOnly>
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </TextEdit>
                </Field>
            </Fields>
        </Column>
    </Row>
    <Row>
        <Column ColumnSize="ColumnSize.IsFull.Is8.OnWidescreen.Is8.OnFullHD">
            <Div Margin="Margin.Is4.OnTablet">
                <Text TextColor="TextColor.Light" Italic>
                    Link an external provider to your Crows Against Humility Account!
                </Text>
                @if (_externalProviders.Any())
                {
                    <Div Margin="Margin.Is4.OnTablet">
                        <Buttons ElementId="#btn-animate">
                            <Repeater TItem="AuthenticationScheme" Items="_externalProviders">
                                <Animate Anchor="#btn-animate"
                                         Auto
                                         Animation="Animations.FlipUp"
                                         DelayMilliseconds="500">
                                    <Button Color="Color.Primary"
                                            Border="Border.Rounded"
                                            Shadow="Shadow.Default"
                                            Margin="Margin.Is2.OnX"
                                            Padding="Padding.Is4.OnX"
                                            Outline
                                            To="@GetExternalLoginUrl(context)"
                                            Type="ButtonType.Link">
                                        <Span Class="visually-hidden">
                                            Link with your @context.DisplayName account
                                        </Span>
                                        <i class="@GetLoginProviderIcon(context.DisplayName)"></i>
                                    </Button>
                                </Animate>
                            </Repeater>
                        </Buttons>
                    </Div>
                }
            </Div>
        </Column>
    </Row>
</Container>
<Modal @ref="_modalRef">
    <ModalContent>
        <ModalHeader Background="Background.Dark">
            <ModalTitle TextColor="TextColor.Light">Select your Avatar</ModalTitle>
            <CloseButton Background="Background.White" />
        </ModalHeader>
        <ModalBody Background="Background.Dark">
            <AvatarSelector @bind-SelectedImageUrl="_avatarImageSelectorUrl" />
        </ModalBody>
        <ModalFooter Background="Background.Dark">
            <Buttons Flex="Flex.JustifyContent.Between">
                <Button Color="Color.Primary" Clicked="SaveProfileImageAsync" Margin="Margin.Is2.FromEnd"><Icon Name="IconName.Save" />Save</Button>
                <Button Color="Color.Secondary" Clicked="@_modalRef.Hide">Close</Button>
            </Buttons>
        </ModalFooter>
    </ModalContent>
</Modal>