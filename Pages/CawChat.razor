@page "/chatroom"

<Container Fluid
           Class="chat"
           Margin="Margin.Is4.OnY"
           Padding="Padding.Is3.OnY">
    @if (!_isChatting)
    {
        <Paragraph>
            Enter your name to start chatting:
        </Paragraph>

        <Div Background="Background.Dark" TextColor="TextColor.Light"
         Flex="Flex.Row.Shrink.Is1.Grow.Is0.Wrap.AlignContent.Center"
         Margin="Margin.Is4.OnY"
         Padding="Padding.Is3.OnX">
            <TextEdit Size="Size.Small"
                  MaxLength="32"
                  @bind-Text="@_username" />
            <Button Type="ButtonType.Button"
                Clicked="@Chat"
                Color="Color.Success"
                TextColor="TextColor.Light"
                Shadow="Shadow.Default"
                Border="Border.Dark.OnAll.Rounded.Is2">
                <Icon Name="@("bi bi-person-lines-fill")"
                  IconSize="IconSize.Large"
                  IconStyle="IconStyle.Solid"
                  Margin="Margin.Is1.FromEnd"
                  Padding="Padding.Is2.OnY" />
                Chat!
            </Button>
        </Div>
        // Error messages
        @if (_message is not null)
        {
            <Div Class="invalid-feedback">@_message</Div>
            <Small id="emailHelp" Class="form-text text-muted">@_message</Small>
        }
    }
    else
    {
        <ListGroup Flush
               Class="chat-messages"
               Mode="ListGroupMode.Static"
               Background="Background.Transparent"
               TextOverflow="TextOverflow.Wrap">
            <Repeater TItem="ChatMessage" Items="@_messages">
                <Card TextColor="TextColor.Light"
                  Background="Background.Transparent"
                  Border="Border.Is0.OnAll.Rounded"
                  Margin="Margin.Is0.OnAll">
                    <CardBody Class="@GetChatSenderStatus(context.IsMine)">
                        <CardText Class="chat-bubble">@context.Body</CardText>
                    </CardBody>
                </Card>
            </Repeater>
        </ListGroup>
    }

    <Form Class="chat-input js-inputForm" autocomplete="off" method="post">
        <TextEdit Class="chat-inputField js-inputField" Placeholder="Write a reply..." @bind-Text="_newMessage" />
        <Button Type="ButtonType.Submit"
                Border="Border.Dark.OnAll.Rounded.Is2"
                Color="Color.Info"
                Class="chat-submitBtn"
                Clicked="() => SendAsync(_newMessage)"
                PreventDefaultOnSubmit>
            <Icon Name="@("bi bi-chat-dots-fill")" IconSize="IconSize.Large"
                  IconStyle="IconStyle.Solid"
                  TextColor="TextColor.Dark" />
            Send
        </Button>
    </Form>
</Container>