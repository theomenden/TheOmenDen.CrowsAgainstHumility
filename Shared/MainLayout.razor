@layout RootLayout
@using System.Reflection
@inject IJSRuntime JSRunTime
@inherits LayoutComponentBase
<PageTitle>@ApplicationTitle</PageTitle>

<Layout Sider>
    <LayoutSider>
        <LayoutSiderContent>
            <Bar Mode="BarMode.VerticalInline"
                 Background="Background.Dark"
                 ThemeContrast="ThemeContrast.Dark"
                 CollapseMode="BarCollapseMode.Small"
                 Breakpoint="Breakpoint.FullHD"
                 NavigationBreakpoint="Breakpoint.Desktop"
                 TextOverflow="TextOverflow.Truncate"
                 Shadow="Shadow.Default"
                 Border="Border.Is2.OnEnd.RoundedEnd.Light.OnEnd">
                <BarToggler />
                <BarBrand />
                <BarMenu>
                    <BarStart>
                        <BarItem>
                            <BarLink To="">
                                <BarIcon IconName="IconName.Home" />
                                Home
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <BarLink To="/rules">
                                <BarIcon IconName="IconName.RulerHorizontal" />
                                Rules
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <BarLink To="/createGame">
                                <BarIcon IconName="IconName.Dice" />
                                Game Creation
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <BarLink To="/chatRoom">
                                <BarIcon IconName="@("bi bi-chat-dots")" TextColor="TextColor.Light" />
                                Chat Room
                            </BarLink>
                        </BarItem>
                    </BarStart>
                    <BarEnd>
                        <BarItem>
                            <BarDropdown TextWeight="TextWeight.Light"
                                         TextColor="TextColor.Muted"
                                         Class="fst-italic fs-6">
                                <BarDropdownToggle>
                                    <BarIcon IconName="IconName.Book" TextColor="TextColor.Light" IconSize="IconSize.Small" />
                                    Policies
                                </BarDropdownToggle>
                                <BarDropdownMenu>
                                    <BarDropdownItem To="/privacy-policy" Match="Match.All">
                                        <BarIcon IconName="IconName.Lock" IconSize="IconSize.Small" />
                                        Privacy Policy
                                    </BarDropdownItem>
                                    <BarDropdownItem To="/terms-of-service" Match="Match.All">
                                        <BarIcon IconName="IconName.StickyNote" IconSize="IconSize.Small" />
                                        Terms of Service
                                    </BarDropdownItem>
                                </BarDropdownMenu>
                            </BarDropdown>
                        </BarItem>
                        <BarItem TextWeight="TextWeight.Light"
                                 TextColor="TextColor.Muted"
                                 Class="fst-italic fs-6">
                            <BarLink>
                                <BarIcon IconName="IconName.Code"
                                         IconSize="IconSize.ExtraSmall"
                                         IconStyle="IconStyle.Light" />
                                v-@AssemblyProductVersion
                            </BarLink>
                        </BarItem>
                        <BarItem TextWeight="TextWeight.Light"
                                 TextColor="TextColor.Muted"
                                 Margin="Margin.Is0.FromBottom.OnDesktop"
                                 Class="f_400 fst-italic fs-6">
                            <BarLink>
                                <BarIcon IconName="IconName.Copyright"
                                         IconSize="IconSize.ExtraSmall" />
                                @ApplicationDevelopmentCompany
                                <sup>
                                    <Icon Name="@("bi bi-badge-tm")"
                                          IconSize="IconSize.ExtraSmall"
                                          IconStyle="IconStyle.Solid"
                                          TextColor="TextColor.Light"
                                          Margin="Margin.Is1.FromTop"
                                          Padding="Padding.Is1.FromTop" />
                                </sup>
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <BarLink To="@certLink"
                                     onmouseout="tLTC('tl_popupPOSEV')"
                                     ondragstart="return false;"
                                     onmouseover="tLeB(event,'https://secure.trust-provider.com/ttb_searcher/trustlogo?v_querytype=C&v_shortname=POSEV&v_search=https://crowsagainsthumility.app/&x=6&y=5','tl_popupPOSEV')">
                                <Image Fluid Source="@imagePath"
                                       Text="EV Cert Provider: https://secure.trust-provider.com/"
                                       loading="lazy"
                                       onmousedown="return tLKB(event,'https://secure.trust-provider.com/ttb_searcher/trustlogo?v_querytype=W&v_shortname=POSEV&v_search=https://crowsagainsthumility.app/&x=6&y=5');"
                                       oncontextmenu="return tLLB(event);" />
                            </BarLink>
                        </BarItem>
                    </BarEnd>
                </BarMenu>
            </Bar>
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutHeader Fixed>
            <Bar Breakpoint="Breakpoint.Desktop"
                 Background="Background.Dark"
                 ThemeContrast="ThemeContrast.Dark"
                 Shadow="Shadow.Default"
                 Border="Border.Is2.OnBottom.RoundedBottom.Light.OnBottom">
                <BarBrand Margin="Margin.Is2.FromStart" Casing="CharacterCasing.Upper">
                    @ApplicationTitle
                </BarBrand>
                <BarToggler />
                <BarMenu>
                    <BarStart />
                    <BarEnd Margin="Margin.Is2.FromEnd">
                        <BarItem>
                            <LoginDisplay />
                        </BarItem>
                    </BarEnd>
                </BarMenu>
            </Bar>
        </LayoutHeader>
        <LayoutContent Padding="Padding.Is4.OnX">
            @Body
        </LayoutContent>
    </Layout>
</Layout>

@code {
    private const string imagePath = @"https://www.positivessl.com/images/seals/positivessl_trust_seal_lg_222x54.png";
    private const string certLink = @"javascript:if(window.open('https://secure.trust-provider.com/ttb_searcher/trustlogo?v_querytype=W&v_shortname=POSEV&v_search=https://crowsagainsthumility.app/&x=6&y=5','tl_wnd_credentials'+(new Date()).getTime(),'toolbar=0,scrollbars=1,location=1,status=1,menubar=1,resizable=1,width=374,height=660,left=60,top=120')){};tLlB(tLTB);";

    private static string AssemblyProductVersion
    {
        get
        {
            var attributes = Assembly.GetExecutingAssembly()
                .GetCustomAttributes(typeof(AssemblyFileVersionAttribute), false);
            return attributes.Length == 0 ?
                String.Empty :
                ((AssemblyFileVersionAttribute)attributes[0]).Version;
        }
    }

    private static string ApplicationDevelopmentCompany
    {
        get
        {
            var attributes = Assembly.GetExecutingAssembly()
                .GetCustomAttributes(typeof(AssemblyCompanyAttribute), false);
            return attributes.Length == 0 ?
                String.Empty :
                ((AssemblyCompanyAttribute)attributes[0]).Company;
        }
    }

    private static string ApplicationTitle
    {
        get
        {
            var attributes = Assembly.GetExecutingAssembly()
            .GetCustomAttributes(typeof(AssemblyTitleAttribute), false);
            return attributes.Length == 0
            ? String.Empty
            : ((AssemblyTitleAttribute)attributes[0]).Title;
        }
    }
}