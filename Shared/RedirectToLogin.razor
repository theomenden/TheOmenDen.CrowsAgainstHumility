@inject NavigationManager NavigationManager

@code {
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private const string IdentityAccountLoginPath = "Identity/Account/Login?returnUrl=";

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;

        if (authenticationState?.User?.Identity is null
            || !authenticationState.User.Identity.IsAuthenticated)
        {
            var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

            if (String.IsNullOrWhiteSpace(returnUrl))
            {
                NavigationManager.NavigateTo("auth/login", true);
                return;
            }

            NavigationManager.NavigateTo($"{IdentityAccountLoginPath}{Uri.EscapeDataString(NavigationManager.Uri)}", true);
        }
    }
}