@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}
<h1 class="display-2 text-light text-center">@ViewData["Title"]</h1>
<div class="row d-flex flex-column flex-grow-1 flex-shrink-1 align-content-center align-items-center">
    <div class="col-md-4 bg-dark text-light border border-2 border-light rounded-2 shadow pb-4 mb-3">
        <section>
            <div class="col col-6 bg-dark text-light px-4 w-100">
                <form id="account" method="post">
                    <h2 class="display-4 text-warning py-1">Use a local account to log in.</h2>
                    <hr />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="emailLabel"><i class="bi bi-envelope-fill text-dark ms-2"></i><span class="visually-hidden">Email</span></span>
                        <input asp-for="Input.Email" aria-describedby="emailLabel" class="form-control" autocomplete="username" aria-required="true" type="email" placeholder="Enter your email" />
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    <div class="input-group my-3">
                        <span class="input-group-text" id="passwordLabel"><i class="bi bi-file-earmark-lock-fill text-dark ms-2"></i><span class="visually-hidden">Password</span> </span>
                        <input asp-for="Input.Password" aria-describedby="passwordLabel" class="form-control" autocomplete="current-password" aria-required="true" type="password" placeholder="Enter your password" />
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    <div>
                        <div class="form-check">
                            <label asp-for="Input.RememberMe" class="form-check-label">
                                <input class="form-check-input" type="checkbox" asp-for="Input.RememberMe" />
                                @Html.DisplayNameFor(m => m.Input.RememberMe)
                            </label>
                        </div>
                    </div>
                    <div>
                        <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary border-2 border-light rounded-2 shadow mx-2 my-3">Log in</button>
                    </div>
                    <div>
                        <p>
                            <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                        </p>
                        <p>
                            <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                        </p>
                        <p>
                            <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                        </p>
                    </div>
                </form>
            </div>
        </section>
    </div>
    <div class="bg-dark text-light col-md-6 col-md-offset-2 border border-2 border-light rounded-2 shadow mt-4 pt-5">
        <section>
            <h3 class="text-light display-4">Use another service to log in.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                article
                                about setting up this ASP.NET application to support logging in via external services
                            </a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div class="d-grid gap-2 col-6 mx-auto">
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-outline-primary rounded-2 shadow mx-2 px-4 bounce-in" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                        <span class="visually-hidden">@provider.DisplayName</span> 
                                        
                                        @switch (provider.DisplayName)
                                        {
                                            case var pn when String.Equals(pn, "twitch", StringComparison.OrdinalIgnoreCase):
                                                <i class="bi bi-twitch text-light display-3"></i>
                                                break;
                                            case var pn when String.Equals(pn,"twitter", StringComparison.OrdinalIgnoreCase):
                                                <i class="bi bi-twitter text-light display-3"></i>
                                                break;
                                            case var pn when String.Equals(pn,"discord", StringComparison.OrdinalIgnoreCase):
                                                <i class="bi bi-discord text-light display-3"></i>
                                                break;
                                            default :
                                                break;
                                        }
                                    </button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
