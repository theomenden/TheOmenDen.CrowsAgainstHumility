@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1 class="display-2 text-light text-center">@ViewData["Title"]</h1>

<div class="row d-flex flex-column flex-grow-1 flex-shrink-1 align-content-center align-items-center">
    <div class="col-md-4 bg-dark text-light px-4 w-100">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="input-group has-validation">
                <span class="input-group-text">
                    <i class="bi bi-envelope-fill text-dark ms-2"></i>
                </span>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" type="email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@gmail.com" />
                    <label asp-for="Input.Email" class="text-dark"></label>
                    <span asp-validation-for="Input.Email" class="text-danger invalid-feedback"></span>
                </div>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.Password"></label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.ConfirmPassword"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                article
                                about setting up this ASP.NET application to support logging in via external services
                            </a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div class="d-grid gap-2 col-6 mx-auto">
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-outline-primary rounded-2 shadow mx-2 px-4 bounce-in" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                        <span class="visually-hidden">@provider.DisplayName</span>

                                        @switch (provider.DisplayName)
                                        {
                                            case var pn when String.Equals(pn, "twitch", StringComparison.OrdinalIgnoreCase):
                                                <i class="bi bi-twitch text-light display-3"></i>
                                                break;
                                            case var pn when String.Equals(pn, "twitter", StringComparison.OrdinalIgnoreCase):
                                                <i class="bi bi-twitter text-light display-3"></i>
                                                break;
                                            case var pn when String.Equals(pn, "discord", StringComparison.OrdinalIgnoreCase):
                                                <i class="bi bi-discord text-light display-3"></i>
                                                break;
                                            default:
                                                break;
                                        }
                                    </button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
